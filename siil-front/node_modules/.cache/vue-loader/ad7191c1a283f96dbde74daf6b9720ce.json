{"remainingRequest":"C:\\wamp64\\www\\SIILv3\\siil-front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\wamp64\\www\\SIILv3\\siil-front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\wamp64\\www\\SIILv3\\siil-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\wamp64\\www\\SIILv3\\siil-front\\src\\views\\MainPage.vue?vue&type=template&id=03d9b622&","dependencies":[{"path":"C:\\wamp64\\www\\SIILv3\\siil-front\\src\\views\\MainPage.vue","mtime":1607916358131},{"path":"C:\\wamp64\\www\\SIILv3\\siil-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1607400820881},{"path":"C:\\wamp64\\www\\SIILv3\\siil-front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1607400863741},{"path":"C:\\wamp64\\www\\SIILv3\\siil-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1607400820881},{"path":"C:\\wamp64\\www\\SIILv3\\siil-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1607400863740}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgInYtYXBwIiwKICAgIFsKICAgICAgWwogICAgICAgIF9jKAogICAgICAgICAgImRpdiIsCiAgICAgICAgICBbCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJ2LWNvbnRhaW5lciIsCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJ2LXJvdyIsCiAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICJ2LWNhcmQiLAogICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImNhcmQiLAogICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiAic2Nyb2xsLXRhcmdldCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjOiAiL2l0Y2hhL3R1cHV0YW1hZHJlLmpwZyIKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgInYtY2FyZC10aXRsZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInYtY29sIiwgeyBhdHRyczogeyBjb2xzOiAiNCIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJ2LWF2YXRhciIsIHsgYXR0cnM6IHsgc2l6ZTogIjEyMCIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJtYi02IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzcmM6ICIvaXRjaGEvZXNjdWRvLnBuZyIgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygidi1jb2wiLCB7IGF0dHJzOiB7IGNvbHM6ICI4IiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogIm1iLTQgbWwtNCIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInYtdG9vbGJhci10aXRsZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgaWQ6ICJ0aXR0bGV0b29sIiB9IH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiU2lzdGVtYSBJbmZvcm1hdGljbyBkZSBJbnRlcm1lZGlhY2lvbiBMYWJvcmFsIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgMQogICAgICAgICAgICApCiAgICAgICAgICBdLAogICAgICAgICAgMQogICAgICAgICkKICAgICAgXSwKICAgICAgX2MoCiAgICAgICAgImRpdiIsCiAgICAgICAgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJzZWN0aW9uIiwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAidi1jYXJkIiwKICAgICAgICAgICAgICAgICAgeyBzdGF0aWNTdHlsZTogeyBtYXJnaW46ICIyMHB4IiB9LCBhdHRyczogeyBoZWlnaHQ6ICI0MDAiIH0gfSwKICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgInYtY2Fyb3VzZWwiLAogICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm10LTYiLAogICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICJzaG93LWFycm93cy1vbi1ob3ZlciI6ICIiLAogICAgICAgICAgICAgICAgICAgICAgICAgIGN5Y2xlOiAiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICIxMDAlIgogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0ubW9kZWwsCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLm1vZGVsID0gJCR2CiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAibW9kZWwiCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX2woX3ZtLmNvbG9ycywgZnVuY3Rpb24oY29sb3IsIGkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jKCJ2LWNhcm91c2VsLWl0ZW0iLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAga2V5OiBpLAogICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogIi9pdGNoYS8iICsgY29sb3Iuc3JjIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIF0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgMgogICAgICAgICAgKSwKICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfYygiZGl2IiwgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiaDEiLAogICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0LWNlbnRlciBtYi0xNiIsIGF0dHJzOiB7IGlkOiAibGluZXRpdHRsZSIgfSB9LAogICAgICAgICAgICAgIFtfdm0uX3YoIkluZm9ybWFjaW9uIGRlbCBQcm9jZXNvIGRlIEludGVybWVkaWFjaW9uIExhYm9yYWwgIildCiAgICAgICAgICAgICkKICAgICAgICAgIF0pLAogICAgICAgICAgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAidi1yb3ciLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicm93IGFsaWduLWNvbnRlbnQtYmV0d2VlbiAgbXQtNSByb3VuZGVkIiwKICAgICAgICAgICAgICAgIGF0dHJzOiB7IGp1c3RpZnk6ICJjZW50ZXIiLCBkZW5zZTogIiIgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJ2LWNvbCIsCiAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgY29sczogIjEyIiwgc206ICI0IiB9IH0sCiAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICBfYygidi1ob3ZlciIsIHsKICAgICAgICAgICAgICAgICAgICAgIHNjb3BlZFNsb3RzOiBfdm0uX3UoWwogICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAga2V5OiAiZGVmYXVsdCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgZm46IGZ1bmN0aW9uKHJlZikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGhvdmVyID0gcmVmLmhvdmVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidi1jYXJkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm14LWF1dG8gZWxldmF0aW9uLTEwIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiAiY2FyZHMiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGV2YXRpb246IGhvdmVyID8gNDAgOiAxLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibWF4LXdpZHRoIjogIjM2MCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidi1pbWciLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ3aGl0ZS0tdGV4dCBhbGlnbiBlbmQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICIyMDAiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiaHR0cHM6Ly93d3cuaXRjaGEuZWR1LnN2L2ltYWdlcy9wb3J0YWRhL3ZlbnRhamFzLW1lZC5KUEciCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInYtY2FyZC10aXRsZSIsIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiUXVlIGVzIEludGVybWVkaWFjaW9uIExhYm9yYWw/IikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2LWNhcmQtdGV4dCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0LS1wcmltYXJ5IiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIiBMYSBJbnRlcm1lZGlhY2nDs24gTGFib3JhbCBlbiBJVENIQS1BR0FQRSBzZSBlbmZvY2EgYsOhc2ljYW1lbnRlIGVuIGd1aWFyIGFsIGVzdHVkaWFudGUgcG9yIHVuYSBzZXJpZSBkZSBwcm9jZXNvcyBxdWUgbGUgcGVybWl0YW4gYXNlZ3VyYXIgdW4gZW1wbGVvIGZvcm1hbCwgcmVsYWNpb25hZG8gYSBsYXMgY29tcGV0ZW5jaWFzIGFkcXVpcmlkYXMgZW4gc3UgY2FycmVyYSB0w6ljbmljYSwgdG9tYW5kbyBlbiBjdWVudGEgc3VzIG5lY2VzaWRhZGVzLCBpbnRlcmVzZXMgeSBtb3RpdmFjaW9uZXMuIFBhcmEgZXN0byBlcyBuZWNlc2FyaW8gY2FwYWNpdGFyIGFsIGVzdHVkaWFudGUgZWdyZXNhZG8gZW4gbGEgZWxhYm9yYWNpw7NuIGRlbCBDdXJyaWN1bHVtIFZpdGFlIHkgY8OzbW8gcmVhbGl6YXIgc3UgcHJpbWVyYSBlbnRyZXZpc3RhIGRlIHRyYWJham8sIGFkZW3DoXMgZGUgdmluY3VsYXJsb3MgY29uIGxhcyByZXNwZWN0aXZhcyBlbXByZXNhcyBvIGluc3RpdHVjaW9uZXMgcXVlIGdlbmVyYW4gZGVtYW5kYSBkZSBudWVzdHJvcyB0w6ljbmljb3MsIHlhIHNlYSBhIHRyYXbDqXMgZGUgYm9sc2FzIGRlIGVtcGxlbyBvIHBvciBsYSBNZXNhIGRlIEVtcGxlbyB5IEF1dG9lbXBsZW8gZGUgQ2hhbGF0ZW5hbmdvLiAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgInYtY29sIiwKICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyBjb2xzOiAiMTIiLCBzbTogIjQiIH0gfSwKICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgIF9jKCJ2LWhvdmVyIiwgewogICAgICAgICAgICAgICAgICAgICAgc2NvcGVkU2xvdHM6IF92bS5fdShbCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk6ICJkZWZhdWx0IiwKICAgICAgICAgICAgICAgICAgICAgICAgICBmbjogZnVuY3Rpb24ocmVmKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaG92ZXIgPSByZWYuaG92ZXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2LWNhcmQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibXgtYXV0byBlbGV2YXRpb24tMTAiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICJjYXJkcyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZXZhdGlvbjogaG92ZXIgPyA0MCA6IDEsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJtYXgtd2lkdGgiOiAiMzYwIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2LWltZyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIndoaXRlLS10ZXh0IGFsaWduIGVuZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogIjIwMCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJodHRwczovL3d3dy5pdGNoYS5lZHUuc3YvaW1hZ2VzL3BvcnRhZGEvdmVudGFqYXMtbWVkLkpQRyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtfYygidi1jYXJkLXRpdGxlIiwgW192bS5fdigiVmVudGFqYXMiKV0pXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidi1jYXJkLXRleHQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAidGV4dC0tcHJpbWFyeSIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICIgTGEgSW50ZXJtZWRpYWNpw7NuIExhYm9yYWwgZW4gSVRDSEEtQUdBUEUgc2UgZW5mb2NhIGLDoXNpY2FtZW50ZSBlbiBndWlhciBhbCBlc3R1ZGlhbnRlIHBvciB1bmEgc2VyaWUgZGUgcHJvY2Vzb3MgcXVlIGxlIHBlcm1pdGFuIGFzZWd1cmFyIHVuIGVtcGxlbyBmb3JtYWwsIHJlbGFjaW9uYWRvIGEgbGFzIGNvbXBldGVuY2lhcyBhZHF1aXJpZGFzIGVuIHN1IGNhcnJlcmEgdMOpY25pY2EsIHRvbWFuZG8gZW4gY3VlbnRhIHN1cyBuZWNlc2lkYWRlcywgaW50ZXJlc2VzIHkgbW90aXZhY2lvbmVzLiBQYXJhIGVzdG8gZXMgbmVjZXNhcmlvIGNhcGFjaXRhciBhbCBlc3R1ZGlhbnRlIGVncmVzYWRvIGVuIGxhIGVsYWJvcmFjacOzbiBkZWwgQ3VycmljdWx1bSBWaXRhZSB5IGPDs21vIHJlYWxpemFyIHN1IHByaW1lcmEgZW50cmV2aXN0YSBkZSB0cmFiYWpvLCBhZGVtw6FzIGRlIHZpbmN1bGFybG9zIGNvbiBsYXMgcmVzcGVjdGl2YXMgZW1wcmVzYXMgbyBpbnN0aXR1Y2lvbmVzIHF1ZSBnZW5lcmFuIGRlbWFuZGEgZGUgbnVlc3Ryb3MgdMOpY25pY29zLCB5YSBzZWEgYSB0cmF2w6lzIGRlIGJvbHNhcyBkZSBlbXBsZW8gbyBwb3IgbGEgTWVzYSBkZSBFbXBsZW8geSBBdXRvZW1wbGVvIGRlIENoYWxhdGVuYW5nby4gIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJ2LWNvbCIsCiAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgY29sczogIjEyIiwgc206ICI0IiB9IH0sCiAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICBfYygidi1ob3ZlciIsIHsKICAgICAgICAgICAgICAgICAgICAgIHNjb3BlZFNsb3RzOiBfdm0uX3UoWwogICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAga2V5OiAiZGVmYXVsdCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgZm46IGZ1bmN0aW9uKHJlZikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGhvdmVyID0gcmVmLmhvdmVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidi1jYXJkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm14LWF1dG8gZWxldmF0aW9uLTEwIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiAiY2FyZHMiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGV2YXRpb246IGhvdmVyID8gNDAgOiAxLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibWF4LXdpZHRoIjogIjM2MCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidi1pbWciLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ3aGl0ZS0tdGV4dCBhbGlnbiBlbmQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICIyMDAiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiaHR0cHM6Ly93d3cuaXRjaGEuZWR1LnN2L2ltYWdlcy9wb3J0YWRhL3ZlbnRhamFzLW1lZC5KUEciCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInYtY2FyZC10aXRsZSIsIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIlByb2Nlc28gU2VndWltaWVudG8gQSBHcmFkdWFkb3MiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidi1jYXJkLXRleHQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAidGV4dC0tcHJpbWFyeSIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICIgTGEgZW1wbGVhYmlsaWRhZCBzZSBtb25pdG9yZWEgYSB0cmF2w6lzIGRlIGxsYW1hZGFzIHRlbGVmw7NuaWNhcyB5IGRlIGNvbnRhY3RvcyBwb3IgbWVkaW8gZGUgbnVlc3Ryb3MgbWVkaW9zIHZpcnR1YWxlcy4gTG9zIHNlcnZpY2lvcyBkZSBJTCBzZSBwcmVzdGFyw6FuIGEgZ3JhZHVhZG9zIGRlbCBJVENIQS1BR0FQRSBwb3IgdW4gcGVyw61vZG8gZGUgMSBhw7FvIHBvc3RlcmlvciBhIHN1IGdyYWR1YWNpw7NuLiBMYSBJTCBzZSBkZXNhcnJvbGxhIGNvbiBlc3R1ZGlhbnRlcyBncmFkdWFkb3MgZGUgbGFzIGRpZmVyZW50ZXMgY2FycmVyYXMgZGVsIElUQ0hBLUFHQVBFIHBvciB1biBwZXJpb2RvIGRlIDEgYcOxbyBwb3N0ZXJpb3IgYSBzdSBncmFkdWFjacOzbi4gTGEgbWV0YSBhbnVhbCBkZSBpbnNlcmNpw7NuIGxhYm9yYWwgZXN0w6EgZGVmaW5pZGEgZW4gZWwgcGxhbiBvcGVyYXRpdm8gYW51YWwgZGUgbGEgaW5zdGl0dWNpw7NuLiBMb3MgZ3JhZHVhZG9zIHF1ZSByZWNpYmlyw6FuIGVzdGUgYXBveW8gc2Vyw6FuIGFxdWVsbG9zIHF1ZSBsbyBzb2xpY2l0ZW4gYSB0cmF2w6lzIGRlbCBmb3JtdWxhcmlvIGRlIHNlZ3VpbWllbnRvIGEgZ3JhZHVhZG9zLiAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidi1jYXJkLWFjdGlvbnMiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAicm91dGVyLWxpbmsiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyB0bzogIi9sb2dpbiIgfSB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidi1jb2wiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAidGV4dC1jZW50ZXIgbXQtMyAiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgY29sczogIjEyIiwgc206ICIxMiIgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2LWJ0biIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm1iLTIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogImJ0bmNhcmQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxldmF0aW9uOiAiMTAiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICJwcmltYXJ5IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhcms6ICIiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgSW5pY2lhIFlhISAiKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygidi1pY29uIiwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJhcnJvd19yaWdodF9hbHQiKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAxCiAgICAgICAgICAgICkKICAgICAgICAgIF0sCiAgICAgICAgICBbCiAgICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgICAgX2MoImRpdiIsIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJoMSIsCiAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAidGV4dC1jZW50ZXIiLCBhdHRyczogeyBpZDogImxpbmV0aXR0bGUxIiB9IH0sCiAgICAgICAgICAgICAgICBbX3ZtLl92KCJOb3NvdHJvcyIpXQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSkKICAgICAgICAgIF0sCiAgICAgICAgICBbCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJ2LWZvb3RlciIsCiAgICAgICAgICAgICAgeyBhdHRyczogeyBkYXJrOiAiIiwgY29sb3I6ICJibHVlIiB9IH0sCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJ2LXJvdyIsCiAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsganVzdGlmeTogImNlbnRlciIgfSB9LAogICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAidi1jb2wiLAogICAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyBjb2xzOiAiMTIiLCBzbTogIjQiIH0gfSwKICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgX2MoInYtY2FyZC10aXRsZSIsIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJoMyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IGlkOiAiY2VudGVyIiB9IH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiTnVlc3RyYSBNaXNpb24iKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInYtaWNvbiIsIHsgc3RhdGljQ2xhc3M6ICJtbC01IiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgZGlyZWN0aW9uc19ydW4gIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICAgICAgX2MoInYtZGl2aWRlciIsIHsgYXR0cnM6IHsgaWQ6ICJsaW5ldGl0dGxlMiIgfSB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgX2MoInYtY2FyZC10ZXh0IiwgeyBzdGF0aWNDbGFzczogIndoaXRlLS10ZXh0IHB0LTAiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiIEZvcm1hciBwcm9mZXNpb25hbGVzIHTDqWNuaWNvcyBjb24gcmVzcG9uc2FiaWxpZGFkIGNpdWRhZGFuYSwgcGVuc2FtaWVudG8gY3LDrXRpY28sIGNvbiBzZW5zaWJpbGlkYWQgYSBsYSBpbnZlc3RpZ2FjacOzbiB5IGFsIGRlc2Fycm9sbG8gdGVjbm9sw7NnaWNvLCBhIHRyYXbDqXMgZGUgdW4gcHJvY2VzbyBlZHVjYXRpdm8gcXVlIGludGVncmEgYXNwZWN0b3MgYWNhZMOpbWljb3MsIHByb2NlZGltZW50YWxlcyB5IGFjdGl0dWRpbmFsZXMsIGZvcnRhbGVjaWRvcyBjb24gdW4gc2lzdGVtYSBkZSBnZXN0acOzbiBkZSBjYWxpZGFkLCBwYXJhIHByb21vdmVyIGVsIGRlc2Fycm9sbG8gc29jaWFsIHNvc3RlbmlibGUgZGUgbnVlc3RybyBwYcOtcy4gIgogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICJ2LWNvbCIsCiAgICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IGNvbHM6ICIxMiIsIHNtOiAiNCIgfSB9LAogICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICBfYygidi1jYXJkLXRpdGxlIiwgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgImgzIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgaWQ6ICJjZW50ZXIiIH0gfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJOdWVzdHJhIFZpc2lvbiIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygidi1pY29uIiwgeyBzdGF0aWNDbGFzczogIm1sLTUiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiB2aXNpYmlsaXR5ICIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJ2LWRpdmlkZXIiLCB7IGF0dHJzOiB7IGlkOiAibGluZXRpdHRsZTIiIH0gfSksCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJ2LWNhcmQtdGV4dCIsIHsgc3RhdGljQ2xhc3M6ICJ3aGl0ZS0tdGV4dCBwdC0wIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIiBTZXIgdW5hIGluc3RpdHVjacOzbiBlZHVjYXRpdmEgcmVmZXJlbnRlIGVuIGxhIGZvcm1hY2nDs24gZGUgcHJvZmVzaW9uYWxlcyBlbiDDoXJlYXMgdGVjbm9sw7NnaWNhcyBjb24gY29tcGV0ZW5jaWFzIHBhcmEgbGEgdmlkYSB5IGVsIHRyYWJham8sIGNvbiBzZW5zaWJpbGlkYWQgaHVtYW5hOyBxdWUgc2UgaW5jb3Jwb3JlbiByZXNwb25zYWJsZW1lbnRlIGFsIGRlc2Fycm9sbG8gcHJvZHVjdGl2byBzb3N0ZW5pYmxlIGRlbCBwYcOtcy4gIgogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAxCiAgICAgICAgICAgICkKICAgICAgICAgIF0sCiAgICAgICAgICBbCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJ2LWZvb3RlciIsCiAgICAgICAgICAgICAgeyBhdHRyczogeyBkYXJrOiAiIiwgcGFkbGVzczogIiIgfSB9LAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAidi1jYXJkIiwKICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImZsZXgiLCBhdHRyczogeyBmbGF0OiAiIiwgdGlsZTogIiIgfSB9LAogICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAidi1jYXJkLXRpdGxlIiwKICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJibGFjayIgfSwKICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgInN0cm9uZyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInB5LTIgd2hpdGUtLXRleHQgdGV4dC1sZWZ0IiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIsKpICIgKwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCkpICsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiIC0gRGVyZWNob3MgUmVzZXJ2YWRvcyAtIElUQ0hBIEFHQVBFIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgX2MoInYtc3BhY2VyIiksCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICJ2LWNvbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyBjb2xzOiAiMTIiLCBzbTogIjQiIH0gfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX2woX3ZtLmljb25zLCBmdW5jdGlvbihpdGVtLCBpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2LWJ0biIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk6IGksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJteC00IG1iLTIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGRhcms6ICIiLCBmYWI6ICIiLCBocmVmOiBpdGVtLmxpbmsgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInYtaWNvbiIsIHsgYXR0cnM6IHsgc2l6ZTogIjIwcHgiIH0gfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgIiArIF92bS5fcyhpdGVtLmljb24pICsgIiAiKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICJ2LWJ0biIsCiAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAic2hvdyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1zaG93IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAhX3ZtLmhpZGRlbiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICIhaGlkZGVuIgogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogInNlY29uZGFyeSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgZWxldmF0aW9uOiAiOSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgZGFyazogIiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgYWJzb2x1dGU6ICIiLAogICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogIiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgcmlnaHQ6ICIiLAogICAgICAgICAgICAgICAgICAgICAgICAgIGZhYjogIiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgIngtbGFyZ2UiOiAiIgogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uJHZ1ZXRpZnkuZ29Ubyhfdm0udGFyZ2V0LCBfdm0ub3B0aW9ucykKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBbX2MoInYtaWNvbiIsIFtfdm0uX3YoImtleWJvYXJkX2Fycm93X3VwIildKV0sCiAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAxCiAgICAgICAgICAgICkKICAgICAgICAgIF0KICAgICAgICBdLAogICAgICAgIDIKICAgICAgKQogICAgXSwKICAgIDIKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}